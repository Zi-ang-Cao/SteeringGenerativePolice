defaults:
  - _self_
hydra:
  run:  
    dir: ${logdir}

name: robomimic_square_dsrl_${now:%Y-%m-%d}_${now:%H-%M-%S}_${seed}
logdir: ${log_dir}/robomimic-dsrl/${name}/${now:%Y-%m-%d}_${now:%H-%M-%S}_${seed}
base_policy_path: ./dppo/log/robomimic-pretrain/square/square_pre_diffusion_mlp_ta4_td100_ddim-100steps/2025-04-11_19-13-26_44/checkpoint/state_3000.pt
offline_data_path: ./dppo/log/robomimic/square_traj_data/train_offline.npz
normalization_path: ./dppo/log/robomimic/${env_name}/normalization.npz
dppo_path: ./dppo

algorithm: dsrl_na

seed: 1
device: cuda:0
use_wandb: True
env_name: square
log_dir: ./logs 
obs_dim: 23
action_dim: 7
cond_steps: 1
act_steps: 4
load_offline_data: False
deterministic_eval: False

eval_interval: 4000
num_evals: 200
save_model_interval: 1000000
save_replay_buffer: False

env:
  n_envs:  4
  n_eval_envs: 25
  name: ${env_name}
  max_episode_steps: 400
  reset_at_iteration: False
  save_video: False
  best_reward_threshold_for_success: 1 
  reward_offset: 1
  wrappers:
    robomimic_lowdim:
      normalization_path: ${normalization_path}
      low_dim_keys: ['robot0_eef_pos',
                    'robot0_eef_quat',
                    'robot0_gripper_qpos',
                    'object'] 
    multi_step:
      n_obs_steps: ${cond_steps}
      n_action_steps: ${act_steps}
      max_episode_steps: ${env.max_episode_steps}
      reset_within_step: True

wandb:
  project: dsrl
  run: ${now:%H-%M-%S}_${name}
  group: robomimic-square

train:
  tau: 0.005 # Target update rate
  actor_lr: 3e-4
  batch_size: 256
  train_freq: 1 # Update model after this many environment steps
  utd: 20 # Number of gradient steps to take per update
  noise_critic_grad_steps: 10 # Number of gradient steps to take per update when fitting noise critic 
  use_layer_norm: True
  layer_size: 2048 # Layer size for actor and critic
  num_layers: 3 # Number of layers for actor and critic
  discount: 0.999
  ent_coef: -1
  target_ent: 0.0
  init_rollout_steps: 2001 # Number of rollout steps of standard diffusion policy to collect for replay buffer before training starts
  action_magnitude: 1.5 # Maximum action magnitude in noise action space
  n_critics: 2 # Number of critic Q networks
  critic_backup_combine_type: min

model:
  _target_: model.diffusion.diffusion_eval.DiffusionEval
  ft_denoising_steps: 0
  predict_epsilon: True
  denoised_clip_value: 1.0
  randn_clip_value: 3
  network_path: ${base_policy_path}
  network:
    _target_: model.diffusion.mlp_diffusion.DiffusionMLP
    time_dim: 32
    mlp_dims: [1024, 1024, 1024]
    cond_mlp_dims: [512, 64]
    residual_style: True
    cond_dim: ${eval:'${obs_dim} * ${cond_steps}'}
    horizon_steps: ${act_steps}
    action_dim: ${action_dim}
  horizon_steps: ${act_steps}
  obs_dim: ${obs_dim}
  action_dim: ${action_dim}
  denoising_steps: 100
  device: ${device}
  use_ddim: True
  ddim_steps: 8
  controllable_noise: True